# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none
#- master

pr:
#- master
#- dev
#  branches:
#    include:
#    - features/*
#    exclude:
#    - features/experimental/*
  paths:
    include:
     - ServerSide/*
    exclude:
    - README.md

pool:
  vmImage: ubuntu-latest #windows-latest

variables:
  buildConfiguration: 'Release'
  solution: 'ServerSide/TeamGraphQL/TeamGraphQL.sln'
  buildPlatform: 'Any CPU'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    arguments: 'GQLServer/GQLServer.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --self-contained true --runtime win-x64 /p:Version=16.11.0'
    modifyOutputPath: false
    ##zipAfterPublish: True
    workingDirectory: 'ServerSide/TeamGraphQL'

# Add this Command to Include the .NET 6 SDK
# - task: UseDotNet@2
#   displayName: Use .NET 5.0 (SDK 5.0.400)
#   inputs:
#     packageType: 'sdk'
#     version: '5.0.400'

# Add a Command To List the Current .NET SDKs (Sanity Check)
# - task: CmdLine@2
#   inputs:
#     script: 'dotnet --list-sdks'

# - task: NuGetToolInstaller@1

# - task: NuGetCommand@2
#   inputs:
#     restoreSolution: '$(solution)'

# - task: CmdLine@2
#   displayName: Build (dotnet)
#   inputs:
#     script: 'dotnet build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --self-contained true --runtime win-x64'
#     workingDirectory: 'ServerSide/TeamGraphQL'

# - task: CmdLine@2
#   displayName: Publish (dotnet)
#   inputs:
#     script: 'dotnet publish --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --self-contained true --runtime win-x64'
#     workingDirectory: 'ServerSide/TeamGraphQL'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\a.zip"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     vsVersion: 16.0

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  inputs:
    ##PathtoPublish: 'TeamApi/TeamApi/bin/Release/net5.0'
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'TEAM-Hub-GQL-Artifact'
    publishLocation: 'Container'
    #StoreAsTar: true
    